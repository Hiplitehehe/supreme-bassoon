"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContextMenuCommand = void 0;
const AkairoError_js_1 = require("../../util/AkairoError.js");
const Util_js_1 = require("../../util/Util.js");
const AkairoModule_js_1 = require("../AkairoModule.js");
/**
 * Represents a context menu command.
 */
class ContextMenuCommand extends AkairoModule_js_1.AkairoModule {
    /**
     * @param id - Listener ID.
     * @param options - Options for the context menu command.
     */
    constructor(id, options) {
        const { category, guilds, name, ownerOnly, superUserOnly, type } = options;
        if (category !== undefined && typeof category !== "string")
            throw new TypeError("options.category must be a string.");
        if (guilds !== undefined && !Util_js_1.Util.isArrayOf(guilds, "string"))
            throw new TypeError("options.guilds must be an array of strings.");
        if (name !== undefined && typeof name !== "string")
            throw new TypeError("options.name must be a string.");
        if (ownerOnly !== undefined && typeof ownerOnly !== "boolean")
            throw new TypeError("options.ownerOnly must be a boolean");
        if (type !== "USER" && type !== "MESSAGE")
            throw new TypeError("options.type must be either 'USER' or 'MESSAGE'.");
        super(id, { category });
        this.guilds = guilds;
        this.name = name;
        this.ownerOnly = ownerOnly;
        this.superUserOnly = superUserOnly;
        this.type = type;
    }
    /**
     * Executes the context menu command.
     * @param interaction - The context menu command interaction.
     */
    exec(interaction) {
        throw new AkairoError_js_1.AkairoError("NOT_IMPLEMENTED", this.constructor.name, "exec");
    }
}
exports.ContextMenuCommand = ContextMenuCommand;
//# sourceMappingURL=ContextMenuCommand.js.map